@page "/movies"

@inject HttpClient http

@using BlazorMovie.Model
@using BlazorMovie.Components

@using System.Collections.ObjectModel



<h3>Movies</h3>

<form @onchange="SearchMovies" @onsubmit="SearchMovies">
    Search: <input @bind="SearchQuery" />
    <button>Do it!</button>
</form>
<div class="flex-row d-flex flex-wrap">
    @foreach(var movie in movies)
    {
    <div class="p-2">
        <MovieCard movie="@movie"/>
    </div>
    }
</div>

@code {
    private ObservableCollection<MovieItem> movies = new();
    private MovieDBResponse response;
    private string SearchQuery;

    private const string APIKey = "api_key=8ead07dd4054fd1ebbc2f3f8a6a94214";
    private const string DefaultSearch = "movie/popular?";
    private const string BaseURL = "https://api.themoviedb.org/3/";



    protected override async Task OnInitializedAsync()
    {
        response = await http.GetFromJsonAsync<MovieDBResponse>($"{BaseURL+DefaultSearch+APIKey}");

        movies = response.results;
    }

    private async Task SearchMovies()
    {
        if (!string.IsNullOrEmpty(SearchQuery))
        {
            response = await http.GetFromJsonAsync<MovieDBResponse>($"{BaseURL}search/movie?query={SearchQuery}&{APIKey}");


        }
        else
        {
            response = await http.GetFromJsonAsync<MovieDBResponse>($"{BaseURL + DefaultSearch + APIKey}");
        }

        movies = response.results;
    }
}
